// Author: ANM
// Version: 1
// License: Public Domain
// Name: Coordinates of HIP54589

// Made on Stellarium 0.16.1

years = ["2020"]
months = ["02","03","05","06","07", "08", "09"]

local_output_path = "D:\\Users\\an\\experimento-usb-interferometro\\"

dir_name = "height-star"

output_path = local_output_path + "\\" + dir_name + "\\"

// stars
object_infos = ["HIP54589","Sun","Moon", "Jupiter", "Venus", "Mars"]

observer_location = "Caracas, Venezuela"

// how many points per file
nmeses = 1
diasmes = 31
horasdia = 24
medidashora = 2
minutos_medida = 60 / medidashora

/// test
//diasmes = 2

ciclos = nmeses*diasmes*horasdia*medidashora
//ciclos = 5

////////////////// don't need to modify below this line ////////////////////////

core.setObserverLocation(observer_location)
core.setPlanetocentricCalculations(false)

//core.selectObjectByName(object_info, true);
//core.setDate(year + "-" + month + "-01T00:00:00", "UTC")
//map=core.getObjectInfo(object_info)
//core.debug(core.mapToString(map))
//core.debug("Coordinates of star "+object_info+" (times are in UTC) in "+observer_location+":");

//core.exit()

waittime = 0.05

core.debug("Times are in UTC");
for (k=0; k<object_infos.length; k++) {
	for (y=0; y<years.length; y++) {
		for (j=0; j<months.length; j++) {
			year = years[y]
			month = months[j]
			object_info = object_infos[k]
			output_fname = "heightstar-"+object_info+"-"+year + "-" + month + ".csv"

			core.selectObjectByName(object_info, true);
			core.setDate(year + "-" + month + "-01T00:00:00", "UTC")

			core.debug(object_info + ": " + year + "-" + month)

			core.wait(waittime);
			core.resetOutput()
			for (i=0; i<ciclos; i++) {
				date = core.getDate()
				map=core.getObjectInfo(object_info)
				core.output(date + ",Az,Alt," + map["azimuth-geometric"] + "," + map["altitude-geometric"] + ",dkm," + map["distance-km"])
				if (i == 0) {
					core.debug(output_fname)
					core.debug("TEST LINE: " + date + ",Az,Alt," + map["azimuth-geometric"] + "," + map["altitude-geometric"] + ",dkm," + map["distance-km"])
				}
				if (i % 100 == 0) {
					//core.debug(object_info + ": " + year + "-" + month + " - " + i + "/" + ciclos )
				}
				core.setDate("+"+minutos_medida+" minutes", "UTC")
				core.wait(waittime);

			}
			core.saveOutputAs(output_fname)
		}
	}
}
core.debug("fin")
core.debug("Times are in UTC, Location was set in " + observer_location);
